/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LibRoyaltiesV2,
  LibRoyaltiesV2Interface,
} from "../LibRoyaltiesV2";

const _abi = [
  {
    inputs: [],
    name: "_INTERFACE_ID_ROYALTIES",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xa0896c75",
        type: "bytes32",
      },
    ],
    name: "c_0xa0896c75",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610158610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c806339f63b2c1461004557806376aec5f214610063575b600080fd5b61004d61007f565b60405161005a91906100c8565b60405180910390f35b61007d6004803603810190610078919061011e565b61008a565b005b63cad96cca60e01b81565b50565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6100c28161008d565b82525050565b60006020820190506100dd60008301846100b9565b92915050565b600080fd5b6000819050919050565b6100fb816100e8565b811461010657600080fd5b50565b600081359050610118816100f2565b92915050565b600060208284031215610134576101336100e3565b5b600061014284828501610109565b9150509291505056fea164736f6c6343000809000a";

type LibRoyaltiesV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LibRoyaltiesV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LibRoyaltiesV2__factory extends ContractFactory {
  constructor(...args: LibRoyaltiesV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LibRoyaltiesV2> {
    return super.deploy(overrides || {}) as Promise<LibRoyaltiesV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LibRoyaltiesV2 {
    return super.attach(address) as LibRoyaltiesV2;
  }
  connect(signer: Signer): LibRoyaltiesV2__factory {
    return super.connect(signer) as LibRoyaltiesV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibRoyaltiesV2Interface {
    return new utils.Interface(_abi) as LibRoyaltiesV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibRoyaltiesV2 {
    return new Contract(address, _abi, signerOrProvider) as LibRoyaltiesV2;
  }
}
