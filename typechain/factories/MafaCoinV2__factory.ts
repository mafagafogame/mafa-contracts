/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MafaCoinV2, MafaCoinV2Interface } from "../MafaCoinV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "tSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AccountAlreadyExcluded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AccountAlreadyIncluded",
    type: "error",
  },
  {
    inputs: [],
    name: "AddressAlreadySet",
    type: "error",
  },
  {
    inputs: [],
    name: "DefaultPairUpdated",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "MaxBuyFeeExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "MaxSellAmountExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "MaxSellAmountTooLow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "MaxSellFeeExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "NoAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "SettingZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "BuyFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "ExcludeFromFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "feeRecipientAddress",
        type: "address",
      },
    ],
    name: "FeeRecipientAddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "IncludeInFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "MaxSellAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "MinTokensToTakeFeeInBNBUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "SellFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "SetAutomatedMarketMakerPair",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawERC1155",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "WithdrawERC20",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "WithdrawERC721",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_BUY_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_SELL_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_ANTI_DUMP_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "automatedMarketMakerPairs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dexFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dexPair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dexRouter",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "excludeFromFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "includeInFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isExcludedFromFees",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSellAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minTokensToTakeFeeInBNB",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sellFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "setAutomatedMarketMakerPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "setBuyFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "setFeeRecipientAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setMaxSellAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setMinTokensToTakeFeeInBNB",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "setSellFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawERC1155",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "withdrawERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e060405266b1a2bc2ec5000060075566b1a2bc2ec5000060085569152d02c7e14af6800000600a55683635c9adc5dea00000600b553480156200004257600080fd5b506040516200331e3803806200331e83398101604081905262000065916200070c565b8251839083906200007e90600390602085019062000599565b5080516200009490600490602084019062000599565b505050620000b1620000ab620002dd60201b60201c565b620002e1565b6001600655620000c13062000333565b620000de620000d86005546001600160a01b031690565b62000333565b600554600980546001600160a01b0319166001600160a01b0390921691821790556200010b908262000415565b7310ed43c718714eb63d5aa57b78b54704e256024e608081905273ca143ce32fe78f1f7019d7d551a6402fc5350c7360a0526040805163c45a015560e01b8152905163c45a015591600480820192602092909190829003018186803b1580156200017457600080fd5b505afa15801562000189573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001af91906200077f565b6001600160a01b031663c9c65396306080516001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b158015620001fa57600080fd5b505afa1580156200020f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200023591906200077f565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381600087803b1580156200027e57600080fd5b505af115801562000293573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002b991906200077f565b6001600160a01b031660c0819052620002d4906001620004fa565b50505062000815565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6005546001600160a01b03163314620003825760405162461bcd60e51b81526020600482018190526024820152600080516020620032fe83398151915260448201526064015b60405180910390fd5b6001600160a01b0381166000908152600c602052604090205460ff1615620003c9576040516374236dab60e01b81526001600160a01b038216600482015260240162000379565b6001600160a01b0381166000818152600c6020526040808220805460ff19166001179055517f57a00f76b5f242fb1e04b0b514a6974665a5b07bce45e39f36dabff4a042d9369190a250565b6001600160a01b0382166200046d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640162000379565b8060026000828254620004819190620007b1565b90915550506001600160a01b03821660009081526020819052604081208054839290620004b0908490620007b1565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6005546001600160a01b03163314620005455760405162461bcd60e51b81526020600482018190526024820152600080516020620032fe833981519152604482015260640162000379565b6001600160a01b0382166000818152600d6020526040808220805460ff191685151590811790915590519092917fffa9187bf1f18bf477bd0ea1bcbb64e93b6a98132473929edfce215cd9b16fab91a35050565b828054620005a790620007d8565b90600052602060002090601f016020900481019282620005cb576000855562000616565b82601f10620005e657805160ff191683800117855562000616565b8280016001018555821562000616579182015b8281111562000616578251825591602001919060010190620005f9565b506200062492915062000628565b5090565b5b8082111562000624576000815560010162000629565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200066757600080fd5b81516001600160401b03808211156200068457620006846200063f565b604051601f8301601f19908116603f01168101908282118183101715620006af57620006af6200063f565b81604052838152602092508683858801011115620006cc57600080fd5b600091505b83821015620006f05785820183015181830184015290820190620006d1565b83821115620007025760008385830101525b9695505050505050565b6000806000606084860312156200072257600080fd5b83516001600160401b03808211156200073a57600080fd5b620007488783880162000655565b945060208601519150808211156200075f57600080fd5b506200076e8682870162000655565b925050604084015190509250925092565b6000602082840312156200079257600080fd5b81516001600160a01b0381168114620007aa57600080fd5b9392505050565b60008219821115620007d357634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620007ed57607f821691505b602082108114156200080f57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c051612a9d62000861600039600081816107b001526113a4015260006106d60152600081816102ed015281816123500152818161241801526124540152612a9d6000f3fe6080604052600436106102a45760003560e01c806370a082311161016e578063a55b4d16116100cb578063dd62ed3e1161007f578063e99c9d0911610064578063e99c9d091461077e578063f242ab411461079e578063f2fde38b146107d257600080fd5b8063dd62ed3e14610718578063e57f14e11461075e57600080fd5b8063b62496f5116100b0578063b62496f514610694578063b8d8fbb4146106c4578063dbcdc2cc146106f857600080fd5b8063a55b4d161461065e578063a9059cbb1461067457600080fd5b80638da5cb5b116101225780639a7a23d6116101075780639a7a23d6146105fe578063a1db97821461061e578063a457c2d71461063e57600080fd5b80638da5cb5b146105cb57806395d89b41146105e957600080fd5b806371f8a29f1161015357806371f8a29f1461058b578063867508ad146105245780638b4cee08146105ab57600080fd5b806370a0823114610540578063715018a61461057657600080fd5b80632e1a7d4d1161021c57806346904840116101d05780634fbee193116101b55780634fbee193146104de57806366d602ae1461050e5780636e628f3b1461052457600080fd5b806346904840146104a857806347062402146104c857600080fd5b80633950935111610201578063395093511461044a57806339ead7201461046a5780633a7d6e0e1461048a57600080fd5b80632e1a7d4d1461040e578063313ce5671461042e57600080fd5b806313edab811161027357806318160ddd1161025857806318160ddd146103b957806323b872dd146103d85780632b14ca56146103f857600080fd5b806313edab811461037957806316a2f82a1461039957600080fd5b806306fdde03146102b05780630758d924146102db578063095ea7b3146103275780630cc835a31461035757600080fd5b366102ab57005b600080fd5b3480156102bc57600080fd5b506102c56107f2565b6040516102d291906124c9565b60405180910390f35b3480156102e757600080fd5b5061030f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102d2565b34801561033357600080fd5b50610347610342366004612533565b610884565b60405190151581526020016102d2565b34801561036357600080fd5b5061037761037236600461255f565b61089e565b005b34801561038557600080fd5b5061037761039436600461258e565b61094a565b3480156103a557600080fd5b506103776103b4366004612661565b610c95565b3480156103c557600080fd5b506002545b6040519081526020016102d2565b3480156103e457600080fd5b506103476103f3366004612685565b610d6a565b34801561040457600080fd5b506103ca60085481565b34801561041a57600080fd5b5061037761042936600461255f565b610d8e565b34801561043a57600080fd5b50604051601281526020016102d2565b34801561045657600080fd5b50610347610465366004612533565b610efb565b34801561047657600080fd5b506103776104853660046126c6565b610f3a565b34801561049657600080fd5b506103ca69021e19e0c9bab240000081565b3480156104b457600080fd5b5060095461030f906001600160a01b031681565b3480156104d457600080fd5b506103ca60075481565b3480156104ea57600080fd5b506103476104f9366004612661565b600c6020526000908152604090205460ff1681565b34801561051a57600080fd5b506103ca600a5481565b34801561053057600080fd5b506103ca6701f161421c8e000081565b34801561054c57600080fd5b506103ca61055b366004612661565b6001600160a01b031660009081526020819052604090205490565b34801561058257600080fd5b506103776111d5565b34801561059757600080fd5b506103776105a636600461255f565b611229565b3480156105b757600080fd5b506103776105c636600461255f565b6112a4565b3480156105d757600080fd5b506005546001600160a01b031661030f565b3480156105f557600080fd5b506102c561134b565b34801561060a57600080fd5b50610377610619366004612709565b61135a565b34801561062a57600080fd5b50610377610639366004612533565b611403565b34801561064a57600080fd5b50610347610659366004612533565b61175b565b34801561066a57600080fd5b506103ca600b5481565b34801561068057600080fd5b5061034761068f366004612533565b611805565b3480156106a057600080fd5b506103476106af366004612661565b600d6020526000908152604090205460ff1681565b3480156106d057600080fd5b5061030f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561070457600080fd5b50610377610713366004612661565b611813565b34801561072457600080fd5b506103ca610733366004612742565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561076a57600080fd5b50610377610779366004612661565b611908565b34801561078a57600080fd5b5061037761079936600461255f565b6119e1565b3480156107aa57600080fd5b5061030f7f000000000000000000000000000000000000000000000000000000000000000081565b3480156107de57600080fd5b506103776107ed366004612661565b611a8a565b60606003805461080190612770565b80601f016020809104026020016040519081016040528092919081815260200182805461082d90612770565b801561087a5780601f1061084f5761010080835404028352916020019161087a565b820191906000526020600020905b81548152906001019060200180831161085d57829003601f168201915b5050505050905090565b600033610892818585611b5a565b60019150505b92915050565b6005546001600160a01b031633146108eb5760405162461bcd60e51b81526020600482018190526024820152600080516020612a7183398151915260448201526064015b60405180910390fd5b6701f161421c8e0000811115610917576040516302d6bfdf60e61b8152600481018290526024016108e2565b600781905560405181907f7c1445c98b278c9970d007fca6048704bcb25af7cc4a04eb56565d9a9f149ca390600090a250565b6005546001600160a01b031633146109925760405162461bcd60e51b81526020600482018190526024820152600080516020612a7183398151915260448201526064016108e2565b600260065414156109e55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108e2565b60026006556001600160a01b0382163b610a675760405162461bcd60e51b815260206004820152602760248201527f45524337323120746f6b656e2061646472657373206d7573742062652061206360448201527f6f6e74726163740000000000000000000000000000000000000000000000000060648201526084016108e2565b8160005b8251811015610c5157306001600160a01b0316826001600160a01b0316636352211e858481518110610a9f57610a9f6127ab565b60200260200101516040518263ffffffff1660e01b8152600401610ac591815260200190565b60206040518083038186803b158015610add57600080fd5b505afa158015610af1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1591906127c1565b6001600160a01b031614610b915760405162461bcd60e51b815260206004820152603c60248201527f5468697320636f6e747261637420646f65736e2774206f776e20746865204e4660448201527f5420796f752061726520747279696e6720746f2077697468647261770000000060648201526084016108e2565b6001600160a01b0382166342842e0e3033868581518110610bb457610bb46127ab565b60209081029190910101516040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401600060405180830381600087803b158015610c2657600080fd5b505af1158015610c3a573d6000803e3d6000fd5b505050508080610c49906127f4565b915050610a6b565b507f1e25015aae5edd57024568e530333940b2eb27b14fa74604e3076ce2002449098383604051610c8392919061280f565b60405180910390a15050600160065550565b6005546001600160a01b03163314610cdd5760405162461bcd60e51b81526020600482018190526024820152600080516020612a7183398151915260448201526064016108e2565b6001600160a01b0381166000908152600c602052604090205460ff16610d2157604051631263b92160e11b81526001600160a01b03821660048201526024016108e2565b6001600160a01b0381166000818152600c6020526040808220805460ff19169055517f346f6c42af1ce4b7d7951f3fa40a2fb1e78c80ab0f3d76fb4f9fec269d568f0d9190a250565b600033610d78858285611c7e565b610d83858585611d10565b506001949350505050565b6005546001600160a01b03163314610dd65760405162461bcd60e51b81526020600482018190526024820152600080516020612a7183398151915260448201526064016108e2565b60026006541415610e295760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108e2565b60026006554780821115610ea55760405162461bcd60e51b815260206004820152603160248201527f576974686472617761626c653a20796f752063616e6e6f742072656d6f76652060448201527f7468697320746f74616c20616d6f756e7400000000000000000000000000000060648201526084016108e2565b610eaf3383611edf565b7f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436433604080516001600160a01b039092168252602082018590520160405180910390a150506001600655565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906108929082908690610f35908790612866565b611b5a565b6005546001600160a01b03163314610f825760405162461bcd60e51b81526020600482018190526024820152600080516020612a7183398151915260448201526064016108e2565b60026006541415610fd55760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108e2565b60026006556001600160a01b0383163b6110575760405162461bcd60e51b815260206004820152602860248201527f4552433131353520746f6b656e2061646472657373206d75737420626520612060448201527f636f6e747261637400000000000000000000000000000000000000000000000060648201526084016108e2565b604051627eeac760e11b815230600482015260248101839052839082906001600160a01b0383169062fdd58e9060440160206040518083038186803b15801561109f57600080fd5b505afa1580156110b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d7919061287e565b101561114b5760405162461bcd60e51b815260206004820152603a60248201527f7468697320636f6e747261637420646f65736e2774206f776e2074686520616d60448201527f6f756e74206f6620746f6b656e7320746f20776974686472617700000000000060648201526084016108e2565b60408051637921219560e11b8152306004820152336024820152604481018590526064810184905260a06084820152600060a4820181905291516001600160a01b0384169263f242432a9260c4808201939182900301818387803b1580156111b257600080fd5b505af11580156111c6573d6000803e3d6000fd5b50506001600655505050505050565b6005546001600160a01b0316331461121d5760405162461bcd60e51b81526020600482018190526024820152600080516020612a7183398151915260448201526064016108e2565b6112276000611ff8565b565b6005546001600160a01b031633146112715760405162461bcd60e51b81526020600482018190526024820152600080516020612a7183398151915260448201526064016108e2565b600b81905560405181907fc089e812b7be91592cf6dd75fc31025d7285ffe626042340be2d35030014a30f90600090a250565b6005546001600160a01b031633146112ec5760405162461bcd60e51b81526020600482018190526024820152600080516020612a7183398151915260448201526064016108e2565b6701f161421c8e00008111156113185760405163bb2657bf60e01b8152600481018290526024016108e2565b600881905560405181907f495ee53ee22006979ebc689a00ed737d7c13b6419142f82dcaea4ed95ac1e78090600090a250565b60606004805461080190612770565b6005546001600160a01b031633146113a25760405162461bcd60e51b81526020600482018190526024820152600080516020612a7183398151915260448201526064016108e2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614156113f5576040516305a5416360e51b815260040160405180910390fd5b6113ff8282612057565b5050565b600260065414156114565760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016108e2565b60026006556005546001600160a01b031633146114a35760405162461bcd60e51b81526020600482018190526024820152600080516020612a7183398151915260448201526064016108e2565b6001600160a01b0382163b6115205760405162461bcd60e51b815260206004820152603460248201527f576974686472617761626c653a20455243323020746f6b656e2061646472657360448201527f73206d757374206265206120636f6e747261637400000000000000000000000060648201526084016108e2565b6040516370a0823160e01b815230600482015282906000906001600160a01b038316906370a082319060240160206040518083038186803b15801561156457600080fd5b505afa158015611578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159c919061287e565b9050808311156116145760405162461bcd60e51b815260206004820152603160248201527f576974686472617761626c653a20796f752063616e6e6f742072656d6f76652060448201527f7468697320746f74616c20616d6f756e7400000000000000000000000000000060648201526084016108e2565b6001600160a01b03821663a9059cbb336040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b03909116600482015260248101869052604401602060405180830381600087803b15801561168457600080fd5b505af1158015611698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116bc9190612897565b6117085760405162461bcd60e51b815260206004820152601e60248201527f576974686472617761626c653a204661696c206f6e207472616e73666572000060448201526064016108e2565b604080513381526001600160a01b038616602082015280820185905290517f33c35f9541201e342d5e7467016e65a0a06182eb12a5f17103f71cec95b6cb299181900360600190a1505060016006555050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156117f85760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084016108e2565b610d838286868403611b5a565b600033610892818585611d10565b6005546001600160a01b0316331461185b5760405162461bcd60e51b81526020600482018190526024820152600080516020612a7183398151915260448201526064016108e2565b6001600160a01b0381166118825760405163ef945a6560e01b815260040160405180910390fd5b6009546001600160a01b03828116911614156118b157604051637b1616c160e11b815260040160405180910390fd5b6009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517fa345ec35f6688de7acb16feec400db5e8b1897909049558cc27e81c09513580a90600090a250565b6005546001600160a01b031633146119505760405162461bcd60e51b81526020600482018190526024820152600080516020612a7183398151915260448201526064016108e2565b6001600160a01b0381166000908152600c602052604090205460ff1615611995576040516374236dab60e01b81526001600160a01b03821660048201526024016108e2565b6001600160a01b0381166000818152600c6020526040808220805460ff19166001179055517f57a00f76b5f242fb1e04b0b514a6974665a5b07bce45e39f36dabff4a042d9369190a250565b6005546001600160a01b03163314611a295760405162461bcd60e51b81526020600482018190526024820152600080516020612a7183398151915260448201526064016108e2565b69021e19e0c9bab2400000811015611a5757604051631b26759360e31b8152600481018290526024016108e2565b600a81905560405181907fa0dff8a4e8bcaa27b5a2b64bc312f8b338e362bd6cad89f5fe2ae6b8389fb38a90600090a250565b6005546001600160a01b03163314611ad25760405162461bcd60e51b81526020600482018190526024820152600080516020612a7183398151915260448201526064016108e2565b6001600160a01b038116611b4e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016108e2565b611b5781611ff8565b50565b6001600160a01b038316611bbc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016108e2565b6001600160a01b038216611c1d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016108e2565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114611d0a5781811015611cfd5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016108e2565b611d0a8484848403611b5a565b50505050565b6001600160a01b038316611d3757604051630b07e54560e11b815260040160405180910390fd5b6001600160a01b038216611d5e57604051633a954ecd60e21b815260040160405180910390fd5b80611d7c57604051637bc90c0560e11b815260040160405180910390fd5b6001600160a01b0383166000908152600c602052604090205460ff1680611dbb57506001600160a01b0382166000908152600c602052604090205460ff165b15611dd057611dcb8383836120f3565b505050565b6001600160a01b0382166000908152600d602052604081205460ff1615611e8557600a54821115611e17576040516324e4a48960e11b8152600481018390526024016108e2565b6008548015611e7f57611e2c6012600a612998565b611e3682856129a7565b611e4091906129c6565b9150611e4d8530846120f3565b30600090815260208190526040902054600b54811115611e7d57600954611e7d906001600160a01b0316826122f0565b505b50611ecb565b6007548015611ec957611e9a6012600a612998565b611ea482856129a7565b611eae91906129c6565b600954909250611ec99086906001600160a01b0316846120f3565b505b611d0a8484611eda84866129e8565b6120f3565b80471015611f2f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016108e2565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611f7c576040519150601f19603f3d011682016040523d82523d6000602084013e611f81565b606091505b5050905080611dcb5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016108e2565b600580546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6005546001600160a01b0316331461209f5760405162461bcd60e51b81526020600482018190526024820152600080516020612a7183398151915260448201526064016108e2565b6001600160a01b0382166000818152600d6020526040808220805460ff191685151590811790915590519092917fffa9187bf1f18bf477bd0ea1bcbb64e93b6a98132473929edfce215cd9b16fab91a35050565b6001600160a01b03831661216f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016108e2565b6001600160a01b0382166121d15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016108e2565b6001600160a01b038316600090815260208190526040902054818110156122605760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016108e2565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290612297908490612866565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516122e391815260200190565b60405180910390a3611d0a565b806122f9575050565b604080516002808252606082018352600092602083019080368337019050509050308160008151811061232e5761232e6127ab565b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156123a757600080fd5b505afa1580156123bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123df91906127c1565b816001815181106123f2576123f26127ab565b60200260200101906001600160a01b031690816001600160a01b03168152505061243d307f000000000000000000000000000000000000000000000000000000000000000084611b5a565b60405163791ac94760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063791ac947906124929085906000908690899042906004016129ff565b600060405180830381600087803b1580156124ac57600080fd5b505af11580156124c0573d6000803e3d6000fd5b50505050505050565b600060208083528351808285015260005b818110156124f6578581018301518582016040015282016124da565b81811115612508576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114611b5757600080fd5b6000806040838503121561254657600080fd5b82356125518161251e565b946020939093013593505050565b60006020828403121561257157600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156125a157600080fd5b82356125ac8161251e565b915060208381013567ffffffffffffffff808211156125ca57600080fd5b818601915086601f8301126125de57600080fd5b8135818111156125f0576125f0612578565b8060051b604051601f19603f8301168101818110858211171561261557612615612578565b60405291825284820192508381018501918983111561263357600080fd5b938501935b8285101561265157843584529385019392850192612638565b8096505050505050509250929050565b60006020828403121561267357600080fd5b813561267e8161251e565b9392505050565b60008060006060848603121561269a57600080fd5b83356126a58161251e565b925060208401356126b58161251e565b929592945050506040919091013590565b6000806000606084860312156126db57600080fd5b83356126e68161251e565b95602085013595506040909401359392505050565b8015158114611b5757600080fd5b6000806040838503121561271c57600080fd5b82356127278161251e565b91506020830135612737816126fb565b809150509250929050565b6000806040838503121561275557600080fd5b82356127608161251e565b915060208301356127378161251e565b600181811c9082168061278457607f821691505b602082108114156127a557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156127d357600080fd5b815161267e8161251e565b634e487b7160e01b600052601160045260246000fd5b6000600019821415612808576128086127de565b5060010190565b6000604082016001600160a01b03851683526020604081850152818551808452606086019150828701935060005b818110156128595784518352938301939183019160010161283d565b5090979650505050505050565b60008219821115612879576128796127de565b500190565b60006020828403121561289057600080fd5b5051919050565b6000602082840312156128a957600080fd5b815161267e816126fb565b600181815b808511156128ef5781600019048211156128d5576128d56127de565b808516156128e257918102915b93841c93908002906128b9565b509250929050565b60008261290657506001610898565b8161291357506000610898565b816001811461292957600281146129335761294f565b6001915050610898565b60ff841115612944576129446127de565b50506001821b610898565b5060208310610133831016604e8410600b8410161715612972575081810a610898565b61297c83836128b4565b8060001904821115612990576129906127de565b029392505050565b600061267e60ff8416836128f7565b60008160001904831182151516156129c1576129c16127de565b500290565b6000826129e357634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156129fa576129fa6127de565b500390565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015612a4f5784516001600160a01b031683529383019391830191600101612a2a565b50506001600160a01b0396909616606085015250505060800152939250505056fe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a164736f6c6343000809000a4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572";

type MafaCoinV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MafaCoinV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MafaCoinV2__factory extends ContractFactory {
  constructor(...args: MafaCoinV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    tSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MafaCoinV2> {
    return super.deploy(
      name,
      symbol,
      tSupply,
      overrides || {}
    ) as Promise<MafaCoinV2>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    tSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, tSupply, overrides || {});
  }
  attach(address: string): MafaCoinV2 {
    return super.attach(address) as MafaCoinV2;
  }
  connect(signer: Signer): MafaCoinV2__factory {
    return super.connect(signer) as MafaCoinV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MafaCoinV2Interface {
    return new utils.Interface(_abi) as MafaCoinV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MafaCoinV2 {
    return new Contract(address, _abi, signerOrProvider) as MafaCoinV2;
  }
}
