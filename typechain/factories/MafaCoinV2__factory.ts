/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MafaCoinV2, MafaCoinV2Interface } from "../MafaCoinV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "BurnFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "ExcludeFromFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "liquidityAddress",
        type: "address",
      },
    ],
    name: "LiquidityAddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "LiquidityFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "MaxWalletAmountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "SetAutomatedMarketMakerPair",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokensSwapped",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "bnbReceived",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokensIntoLiqudity",
        type: "uint256",
      },
    ],
    name: "SwapAndLiquify",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "ecoSystemAddress",
        type: "address",
      },
    ],
    name: "TeamAddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "TeamFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DEAD_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "afterPreSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "automatedMarketMakerPairs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burnBuyFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burnSellFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dexFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dexPair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dexRouter",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "excluded",
        type: "bool",
      },
    ],
    name: "excludeFromFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isExcludedFromFees",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityBuyFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquiditySellFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxWalletAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "setAutomatedMarketMakerPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "setBurnBuyFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "setBurnSellFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "setLiquidityAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "setLiquidityBuyFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "setLiquiditySellFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setMaxWalletAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "setTeamAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "setTeamBuyFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "setTeamSellFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "teamAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "teamBuyFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "teamSellFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBuyFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSellFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradingIsEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526014805460ff191690553480156200001b57600080fd5b5060405162002e9338038062002e938339810160408190526200003e916200075d565b82518390839062000057906003906020850190620005ea565b5080516200006d906004906020840190620005ea565b5050506200008a620000846200030e60201b60201c565b62000312565b6200009730600162000364565b620000b6620000ae6005546001600160a01b031690565b600162000364565b620000c561dead600162000364565b600554600880546001600160a01b03199081166001600160a01b03909316928317909155600b80549091168217905562000100908262000466565b600f80546001600160a01b03199081167310ed43c718714eb63d5aa57b78b54704e256024e9081179092556010805490911673ca143ce32fe78f1f7019d7d551a6402fc5350c731790556040805163c45a015560e01b8152905163c45a015591600480820192602092909190829003018186803b1580156200018157600080fd5b505afa15801562000196573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001bc9190620007d0565b6001600160a01b031663c9c6539630600f60009054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b815260040160206040518083038186803b1580156200021a57600080fd5b505afa1580156200022f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002559190620007d0565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381600087803b1580156200029e57600080fd5b505af1158015620002b3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002d99190620007d0565b601280546001600160a01b0319166001600160a01b03929092169182179055620003059060016200054b565b50505062000866565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6005546001600160a01b03163314620003b35760405162461bcd60e51b8152602060048201819052602482015260008051602062002e7383398151915260448201526064015b60405180910390fd5b6001600160a01b03821660009081526011602052604090205460ff1615158115151415620004125760405162461bcd60e51b815260206004820152600b60248201526a105b1c9958591e481cd95d60aa1b6044820152606401620003aa565b6001600160a01b038216600081815260116020526040808220805460ff191685151590811790915590519092917f9d8f7706ea1113d1a167b526eca956215946dd36cc7df39eb16180222d8b5df791a35050565b6001600160a01b038216620004be5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401620003aa565b8060026000828254620004d2919062000802565b90915550506001600160a01b038216600090815260208190526040812080548392906200050190849062000802565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6005546001600160a01b03163314620005965760405162461bcd60e51b8152602060048201819052602482015260008051602062002e738339815191526044820152606401620003aa565b6001600160a01b038216600081815260136020526040808220805460ff191685151590811790915590519092917fffa9187bf1f18bf477bd0ea1bcbb64e93b6a98132473929edfce215cd9b16fab91a35050565b828054620005f89062000829565b90600052602060002090601f0160209004810192826200061c576000855562000667565b82601f106200063757805160ff191683800117855562000667565b8280016001018555821562000667579182015b82811115620006675782518255916020019190600101906200064a565b506200067592915062000679565b5090565b5b808211156200067557600081556001016200067a565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620006b857600080fd5b81516001600160401b0380821115620006d557620006d562000690565b604051601f8301601f19908116603f0116810190828211818310171562000700576200070062000690565b816040528381526020925086838588010111156200071d57600080fd5b600091505b8382101562000741578582018301518183018401529082019062000722565b83821115620007535760008385830101525b9695505050505050565b6000806000606084860312156200077357600080fd5b83516001600160401b03808211156200078b57600080fd5b6200079987838801620006a6565b94506020860151915080821115620007b057600080fd5b50620007bf86828701620006a6565b925050604084015190509250925092565b600060208284031215620007e357600080fd5b81516001600160a01b0381168114620007fb57600080fd5b9392505050565b600082198211156200082457634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200083e57607f821691505b602082108114156200086057634e487b7160e01b600052602260045260246000fd5b50919050565b6125fd80620008766000396000f3fe6080604052600436106102eb5760003560e01c8063715018a611610184578063a9059cbb116100d6578063c02466681161008a578063dd62ed3e11610064578063dd62ed3e146107f2578063f242ab4114610838578063f2fde38b1461085857600080fd5b8063c0246668146107a7578063ccb61358146107c7578063d0a39814146107dd57600080fd5b8063b62496f5116100bb578063b62496f514610742578063b8d8fbb414610772578063b9e937001461079257600080fd5b8063a9059cbb1461070c578063aa4bde281461072c57600080fd5b806384e771c51161013857806395d89b411161011257806395d89b41146106b75780639a7a23d6146106cc578063a457c2d7146106ec57600080fd5b806384e771c5146106595780638767d141146106795780638da5cb5b1461069957600080fd5b80637e761377116101695780637e76137714610603578063839e6b171461061957806384d007391461063957600080fd5b8063715018a6146105d85780637ae3ff47146105ed57600080fd5b806327a14fc21161023d5780634fbee193116101f157806361fb8a76116101cb57806361fb8a76146105625780636690864e1461058257806370a08231146105a257600080fd5b80634fbee193146104f2578063525fa81f14610522578063613f12ba1461054257600080fd5b80633221c93f116102225780633221c93f1461049c57806339509351146104bc5780634e6fd6c4146104dc57600080fd5b806327a14fc214610460578063313ce5671461048057600080fd5b806309c58fcd1161029f5780631c75f085116102795780631c75f0851461040a5780631d38ff961461042a57806323b872dd1461044057600080fd5b806309c58fcd146103c557806318160ddd146103df57806319998bbb146103f457600080fd5b806307efbfdc116102d057806307efbfdc1461035a578063095ea7b314610371578063099d0d30146103a157600080fd5b806306fdde03146102f75780630758d9241461032257600080fd5b366102f257005b600080fd5b34801561030357600080fd5b5061030c610878565b60405161031991906121d1565b60405180910390f35b34801561032e57600080fd5b50600f54610342906001600160a01b031681565b6040516001600160a01b039091168152602001610319565b34801561036657600080fd5b5061036f61090a565b005b34801561037d57600080fd5b5061039161038c36600461223b565b6109ad565b6040519015158152602001610319565b3480156103ad57600080fd5b506103b7600a5481565b604051908152602001610319565b3480156103d157600080fd5b506014546103919060ff1681565b3480156103eb57600080fd5b506002546103b7565b34801561040057600080fd5b506103b760075481565b34801561041657600080fd5b50600854610342906001600160a01b031681565b34801561043657600080fd5b506103b760065481565b34801561044c57600080fd5b5061039161045b366004612267565b6109c4565b34801561046c57600080fd5b5061036f61047b3660046122a8565b610a83565b34801561048c57600080fd5b5060405160128152602001610319565b3480156104a857600080fd5b50600b54610342906001600160a01b031681565b3480156104c857600080fd5b506103916104d736600461223b565b610afe565b3480156104e857600080fd5b5061034261dead81565b3480156104fe57600080fd5b5061039161050d3660046122c1565b60116020526000908152604090205460ff1681565b34801561052e57600080fd5b5061036f61053d3660046122c1565b610b3a565b34801561054e57600080fd5b5061036f61055d3660046122a8565b610c37565b34801561056e57600080fd5b5061036f61057d3660046122a8565b610cb2565b34801561058e57600080fd5b5061036f61059d3660046122c1565b610d2d565b3480156105ae57600080fd5b506103b76105bd3660046122c1565b6001600160a01b031660009081526020819052604090205490565b3480156105e457600080fd5b5061036f610e2a565b3480156105f957600080fd5b506103b7600c5481565b34801561060f57600080fd5b506103b7600d5481565b34801561062557600080fd5b5061036f6106343660046122a8565b610e7e565b34801561064557600080fd5b5061036f6106543660046122a8565b610ef9565b34801561066557600080fd5b5061036f6106743660046122a8565b610f74565b34801561068557600080fd5b5061036f6106943660046122a8565b610fef565b3480156106a557600080fd5b506005546001600160a01b0316610342565b3480156106c357600080fd5b5061030c61106a565b3480156106d857600080fd5b5061036f6106e73660046122de565b611079565b3480156106f857600080fd5b5061039161070736600461223b565b61112d565b34801561071857600080fd5b5061039161072736600461223b565b6111de565b34801561073857600080fd5b506103b7600e5481565b34801561074e57600080fd5b5061039161075d3660046122c1565b60136020526000908152604090205460ff1681565b34801561077e57600080fd5b50601054610342906001600160a01b031681565b34801561079e57600080fd5b506103b76111eb565b3480156107b357600080fd5b5061036f6107c23660046122de565b611215565b3480156107d357600080fd5b506103b760095481565b3480156107e957600080fd5b506103b7611320565b3480156107fe57600080fd5b506103b761080d36600461231c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561084457600080fd5b50601254610342906001600160a01b031681565b34801561086457600080fd5b5061036f6108733660046122c1565b61133f565b6060600380546108879061234a565b80601f01602080910402602001604051908101604052809291908181526020018280546108b39061234a565b80156109005780601f106108d557610100808354040283529160200191610900565b820191906000526020600020905b8154815290600101906020018083116108e357829003601f168201915b5050505050905090565b6005546001600160a01b031633146109575760405162461bcd60e51b815260206004820181905260248201526000805160206125d183398151915260448201526064015b60405180910390fd5b662386f26fc100006006819055666a94d74f4300006009819055600c82905566b1a2bc2ec50000600755600a55600d5561099b606461099560025490565b9061140f565b600e556014805460ff19166001179055565b60006109ba338484611422565b5060015b92915050565b60006109d1848484611546565b6001600160a01b038416600090815260016020908152604080832033845290915290205482811015610a6b5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000606482015260840161094e565b610a788533858403611422565b506001949350505050565b6005546001600160a01b03163314610acb5760405162461bcd60e51b815260206004820181905260248201526000805160206125d1833981519152604482015260640161094e565b600e81905560405181907f4b39c36d20c57d220f61fd25c4349d4435cc03ef6c2a680942f15333c3c3e00190600090a250565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916109ba918590610b3590869061239b565b611422565b6005546001600160a01b03163314610b825760405162461bcd60e51b815260206004820181905260248201526000805160206125d1833981519152604482015260640161094e565b600b546001600160a01b0382811691161415610be05760405162461bcd60e51b815260206004820181905260248201527f4c6971756964697479206164647265737320616c726561647920736574746564604482015260640161094e565b600b805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517fdc7c5d23a56c4c5d23992355fddc70925b18279cf5fdfc50847ce9df04a8082e90600090a250565b6005546001600160a01b03163314610c7f5760405162461bcd60e51b815260206004820181905260248201526000805160206125d1833981519152604482015260640161094e565b600781905560405181907f9de4e85041d310d87df38a671e7ecf270c37d73ea017960b904af7051205962190600090a250565b6005546001600160a01b03163314610cfa5760405162461bcd60e51b815260206004820181905260248201526000805160206125d1833981519152604482015260640161094e565b600981905560405181907f5597c0e02a719eddde3b801d7abc15c0023afdcf6880c1e254427559820083c290600090a250565b6005546001600160a01b03163314610d755760405162461bcd60e51b815260206004820181905260248201526000805160206125d1833981519152604482015260640161094e565b6008546001600160a01b0382811691161415610dd35760405162461bcd60e51b815260206004820152601b60248201527f5465616d206164647265737320616c7265616479207365747465640000000000604482015260640161094e565b6008805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040517f56d8cf44088db71780335dd49b5106c9a97ef139d0989cf4c95ce6a7fff36d5590600090a250565b6005546001600160a01b03163314610e725760405162461bcd60e51b815260206004820181905260248201526000805160206125d1833981519152604482015260640161094e565b610e7c6000611a65565b565b6005546001600160a01b03163314610ec65760405162461bcd60e51b815260206004820181905260248201526000805160206125d1833981519152604482015260640161094e565b600d81905560405181907fd54296e32811a7f2da2c1f6e8b39cb815ce208595da09bb98b034ccca6dffc6990600090a250565b6005546001600160a01b03163314610f415760405162461bcd60e51b815260206004820181905260248201526000805160206125d1833981519152604482015260640161094e565b600c81905560405181907fd54296e32811a7f2da2c1f6e8b39cb815ce208595da09bb98b034ccca6dffc6990600090a250565b6005546001600160a01b03163314610fbc5760405162461bcd60e51b815260206004820181905260248201526000805160206125d1833981519152604482015260640161094e565b600a81905560405181907f5597c0e02a719eddde3b801d7abc15c0023afdcf6880c1e254427559820083c290600090a250565b6005546001600160a01b031633146110375760405162461bcd60e51b815260206004820181905260248201526000805160206125d1833981519152604482015260640161094e565b600681905560405181907f9de4e85041d310d87df38a671e7ecf270c37d73ea017960b904af7051205962190600090a250565b6060600480546108879061234a565b6005546001600160a01b031633146110c15760405162461bcd60e51b815260206004820181905260248201526000805160206125d1833981519152604482015260640161094e565b6012546001600160a01b038381169116141561111f5760405162461bcd60e51b815260206004820152601e60248201527f44656661756c7420706169722063616e6e6f74206265206368616e6765640000604482015260640161094e565b6111298282611ac4565b5050565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156111c75760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161094e565b6111d43385858403611422565b5060019392505050565b60006109ba338484611546565b6000611210600c5461120a600954600654611b6090919063ffffffff16565b90611b60565b905090565b6005546001600160a01b0316331461125d5760405162461bcd60e51b815260206004820181905260248201526000805160206125d1833981519152604482015260640161094e565b6001600160a01b03821660009081526011602052604090205460ff16151581151514156112cc5760405162461bcd60e51b815260206004820152600b60248201527f416c726561647920736574000000000000000000000000000000000000000000604482015260640161094e565b6001600160a01b038216600081815260116020526040808220805460ff191685151590811790915590519092917f9d8f7706ea1113d1a167b526eca956215946dd36cc7df39eb16180222d8b5df791a35050565b6000611210600d5461120a600a54600754611b6090919063ffffffff16565b6005546001600160a01b031633146113875760405162461bcd60e51b815260206004820181905260248201526000805160206125d1833981519152604482015260640161094e565b6001600160a01b0381166114035760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161094e565b61140c81611a65565b50565b600061141b82846123b3565b9392505050565b6001600160a01b0383166114845760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161094e565b6001600160a01b0382166114e55760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161094e565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166115aa5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161094e565b6001600160a01b03821661160c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161094e565b600081116116825760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d75737420626520677265617465722060448201527f7468616e207a65726f0000000000000000000000000000000000000000000000606482015260840161094e565b60145460ff16806116cd57506001600160a01b03831660009081526011602052604090205460ff16806116cd57506001600160a01b03821660009081526011602052604090205460ff165b6117195760405162461bcd60e51b815260206004820152601760248201527f54726164696e6720686173206e6f742073746172746564000000000000000000604482015260640161094e565b6001600160a01b03831660009081526011602052604090205460ff168061175857506001600160a01b03821660009081526011602052604090205460ff165b1561176d57611768838383611b6c565b505050565b6001600160a01b03821660009081526013602052604081205481908190819060ff16156118ab57600754156117d4576117b96117ab6012600a6124b9565b600754610995908890611d52565b6008549094506117d49088906001600160a01b031686611d5e565b600a541561182b576117f96117eb6012600a6124b9565b600a54610995908890611d52565b9250611806873085611b6c565b3060009081526020819052604090205461182b90600b546001600160a01b0316611ee7565b6000600d541180156118755750611846600261099560025490565b61dead60009081526020527f44ad89ba62b98ff34f51403ac22759b55759460c0bb5521eb4b6ee3cff49cf8354105b156118a6576118976118896012600a6124b9565b600d54610995908890611d52565b91506118a68761dead84611b6c565b611a39565b600e54856118ce886001600160a01b031660009081526020819052604090205490565b6118d8919061239b565b111561194c5760405162461bcd60e51b815260206004820152602e60248201527f4e65772062616c616e6365206578636565647320746865206d6178696d756d2060448201527f616c6c6f77656420616d6f756e74000000000000000000000000000000000000606482015260840161094e565b6006541561198c576119716119636012600a6124b9565b600654610995908890611d52565b60085490945061198c9088906001600160a01b031686611b6c565b600954156119be576119b16119a36012600a6124b9565b600954610995908890611d52565b92506119be873085611b6c565b6000600c54118015611a0857506119d9600261099560025490565b61dead60009081526020527f44ad89ba62b98ff34f51403ac22759b55759460c0bb5521eb4b6ee3cff49cf8354105b15611a3957611a2a611a1c6012600a6124b9565b600c54610995908890611d52565b9150611a398761dead84611b6c565b611a4f82611a4985818989611f5e565b90611f5e565b9050611a5c878783611b6c565b50505050505050565b600580546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6005546001600160a01b03163314611b0c5760405162461bcd60e51b815260206004820181905260248201526000805160206125d1833981519152604482015260640161094e565b6001600160a01b038216600081815260136020526040808220805460ff191685151590811790915590519092917fffa9187bf1f18bf477bd0ea1bcbb64e93b6a98132473929edfce215cd9b16fab91a35050565b600061141b828461239b565b6001600160a01b038316611bd05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161094e565b6001600160a01b038216611c325760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161094e565b6001600160a01b03831660009081526020819052604090205481811015611cc15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161094e565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611cf890849061239b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611d4491815260200190565b60405180910390a350505050565b600061141b82846124c8565b80611d6857505050565b611d73833083611b6c565b6040805160028082526060820183526000926020830190803683370190505090503081600081518110611da857611da86124e7565b6001600160a01b03928316602091820292909201810191909152600f54604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b158015611dfc57600080fd5b505afa158015611e10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3491906124fd565b81600181518110611e4757611e476124e7565b6001600160a01b039283166020918202929092010152600f54611e6d9130911684611422565b600f546001600160a01b031663791ac9478360008487611e8f4261012c611b60565b6040518663ffffffff1660e01b8152600401611eaf95949392919061251a565b600060405180830381600087803b158015611ec957600080fd5b505af1158015611edd573d6000803e3d6000fd5b5050505050505050565b6000611ef483600261140f565b90506000611f028483611f5e565b905047611f0e83611f6a565b6000611f1a4783611f5e565b9050611f278382876120dc565b8281857f17bbfb9a6069321b6ded73bd96327c9e6b7212a5cd51ff219cd61370acafb56160405160405180910390a4505050505050565b600061141b828461258b565b6040805160028082526060820183526000926020830190803683370190505090503081600081518110611f9f57611f9f6124e7565b6001600160a01b03928316602091820292909201810191909152600f54604080516315ab88c960e31b81529051919093169263ad5c4648926004808301939192829003018186803b158015611ff357600080fd5b505afa158015612007573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061202b91906124fd565b8160018151811061203e5761203e6124e7565b6001600160a01b039283166020918202929092010152600f546120649130911684611422565b600f546001600160a01b031663791ac94783600084306120864261012c611b60565b6040518663ffffffff1660e01b81526004016120a695949392919061251a565b600060405180830381600087803b1580156120c057600080fd5b505af11580156120d4573d6000803e3d6000fd5b505050505050565b600f546120f49030906001600160a01b031685611422565b600f546001600160a01b031663f305d719833086600080876121184261012c611b60565b60405160e089901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b039687166004820152602481019590955260448501939093526064840191909152909216608482015260a481019190915260c4016060604051808303818588803b15801561219857600080fd5b505af11580156121ac573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906120d491906125a2565b600060208083528351808285015260005b818110156121fe578581018301518582016040015282016121e2565b81811115612210576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b038116811461140c57600080fd5b6000806040838503121561224e57600080fd5b823561225981612226565b946020939093013593505050565b60008060006060848603121561227c57600080fd5b833561228781612226565b9250602084013561229781612226565b929592945050506040919091013590565b6000602082840312156122ba57600080fd5b5035919050565b6000602082840312156122d357600080fd5b813561141b81612226565b600080604083850312156122f157600080fd5b82356122fc81612226565b91506020830135801515811461231157600080fd5b809150509250929050565b6000806040838503121561232f57600080fd5b823561233a81612226565b9150602083013561231181612226565b600181811c9082168061235e57607f821691505b6020821081141561237f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156123ae576123ae612385565b500190565b6000826123d057634e487b7160e01b600052601260045260246000fd5b500490565b600181815b808511156124105781600019048211156123f6576123f6612385565b8085161561240357918102915b93841c93908002906123da565b509250929050565b600082612427575060016109be565b81612434575060006109be565b816001811461244a576002811461245457612470565b60019150506109be565b60ff84111561246557612465612385565b50506001821b6109be565b5060208310610133831016604e8410600b8410161715612493575081810a6109be565b61249d83836123d5565b80600019048211156124b1576124b1612385565b029392505050565b600061141b60ff841683612418565b60008160001904831182151516156124e2576124e2612385565b500290565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561250f57600080fd5b815161141b81612226565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b8181101561256a5784516001600160a01b031683529383019391830191600101612545565b50506001600160a01b03969096166060850152505050608001529392505050565b60008282101561259d5761259d612385565b500390565b6000806000606084860312156125b757600080fd5b835192506020840151915060408401519050925092509256fe4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a164736f6c6343000809000a4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572";

type MafaCoinV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MafaCoinV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MafaCoinV2__factory extends ContractFactory {
  constructor(...args: MafaCoinV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    totalSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MafaCoinV2> {
    return super.deploy(
      name,
      symbol,
      totalSupply,
      overrides || {}
    ) as Promise<MafaCoinV2>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    totalSupply: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      totalSupply,
      overrides || {}
    );
  }
  attach(address: string): MafaCoinV2 {
    return super.attach(address) as MafaCoinV2;
  }
  connect(signer: Signer): MafaCoinV2__factory {
    return super.connect(signer) as MafaCoinV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MafaCoinV2Interface {
    return new utils.Interface(_abi) as MafaCoinV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MafaCoinV2 {
    return new Contract(address, _abi, signerOrProvider) as MafaCoinV2;
  }
}
