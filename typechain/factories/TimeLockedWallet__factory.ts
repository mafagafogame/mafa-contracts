/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TimeLockedWallet,
  TimeLockedWalletInterface,
} from "../TimeLockedWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_toWallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mafacoin",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_unlockDate",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Received",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrew",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "createdAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "info",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mafacoin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockDate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516108ae3803806108ae83398101604081905261002f916100eb565b6100383361007f565b600180546001600160a01b03199081163317909155600280546001600160a01b03958616908316179055600380549390941692169190911790915560045542600555610127565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100e657600080fd5b919050565b60008060006060848603121561010057600080fd5b610109846100cf565b9250610117602085016100cf565b9150604084015190509250925092565b610778806101366000396000f3fe6080604052600436106100b55760003560e01c806369ac5721116100695780638da5cb5b1161004e5780638da5cb5b1461023f578063cf09e0d01461025d578063f2fde38b14610273576100f5565b806369ac572114610206578063715018a61461022a576100f5565b80633a85ede31161009a5780633a85ede3146101af5780633ccfd60b146101cf578063409569f8146101e6576100f5565b806302d05d3f1461012a578063370158ea14610167576100f5565b366100f557604080513381523460208201527f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f8852587491015b60405180910390a1005b604080513381523460208201527f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f8852587491016100eb565b34801561013657600080fd5b5060015461014a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561017357600080fd5b5061017c610293565b604080516001600160a01b039687168152959094166020860152928401919091526060830152608082015260a00161015e565b3480156101bb57600080fd5b5060035461014a906001600160a01b031681565b3480156101db57600080fd5b506101e4610346565b005b3480156101f257600080fd5b5060025461014a906001600160a01b031681565b34801561021257600080fd5b5061021c60045481565b60405190815260200161015e565b34801561023657600080fd5b506101e4610550565b34801561024b57600080fd5b506000546001600160a01b031661014a565b34801561026957600080fd5b5061021c60055481565b34801561027f57600080fd5b506101e461028e366004610700565b6105b6565b6003546040516370a0823160e01b815230600482015260009182918291829182916001600160a01b031690829082906370a082319060240160206040518083038186803b1580156102e357600080fd5b505afa1580156102f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031b9190610730565b6001546002546004546005546001600160a01b039384169c939092169a509850965090945092505050565b6000546001600160a01b031633146103a55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6004544210156103f75760405162461bcd60e51b815260206004820152601960248201527f43616e6e6f7420756e6c6f636b20746f6b656e73207965742100000000000000604482015260640161039c565b6003546040516370a0823160e01b81523060048201526001600160a01b039091169060009082906370a082319060240160206040518083038186803b15801561043f57600080fd5b505afa158015610453573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104779190610730565b60025460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810183905291925083169063a9059cbb90604401602060405180830381600087803b1580156104c757600080fd5b505af11580156104db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ff9190610749565b50600354604080516001600160a01b03909216825233602083015281018290527f0472be967f9a37138dfea1875af44784cafb79f92044ab33d7d6958eddd9ca6c9060600160405180910390a15050565b6000546001600160a01b031633146105aa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161039c565b6105b46000610698565b565b6000546001600160a01b031633146106105760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161039c565b6001600160a01b03811661068c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161039c565b61069581610698565b50565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561071257600080fd5b81356001600160a01b038116811461072957600080fd5b9392505050565b60006020828403121561074257600080fd5b5051919050565b60006020828403121561075b57600080fd5b8151801515811461072957600080fdfea164736f6c6343000809000a";

type TimeLockedWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TimeLockedWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TimeLockedWallet__factory extends ContractFactory {
  constructor(...args: TimeLockedWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _toWallet: string,
    _mafacoin: string,
    _unlockDate: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TimeLockedWallet> {
    return super.deploy(
      _toWallet,
      _mafacoin,
      _unlockDate,
      overrides || {}
    ) as Promise<TimeLockedWallet>;
  }
  getDeployTransaction(
    _toWallet: string,
    _mafacoin: string,
    _unlockDate: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _toWallet,
      _mafacoin,
      _unlockDate,
      overrides || {}
    );
  }
  attach(address: string): TimeLockedWallet {
    return super.attach(address) as TimeLockedWallet;
  }
  connect(signer: Signer): TimeLockedWallet__factory {
    return super.connect(signer) as TimeLockedWallet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TimeLockedWalletInterface {
    return new utils.Interface(_abi) as TimeLockedWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TimeLockedWallet {
    return new Contract(address, _abi, signerOrProvider) as TimeLockedWallet;
  }
}
